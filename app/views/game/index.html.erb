
<h4 align="center">Game <%=@game.id%></h1>
<img class="img-responsive" src="http://d2art.com/wp-content/uploads/2013/10/placeholder_image1.png">

</br>

<div class="panel panel-primary">
  <div class="panel-heading"><b>Server Chat</b></div>
  <div id="chat" class="panel-body fixed-panel"></div>
  <div class="panel-footer">
    <div class="input-group">
      <input id="message_box" class="form-control"  placeholder="Enter your message">
      <span class="input-group-btn">
        <button id="send_button" class="btn btn-primary" onclick="sendMessage()">Send</button>
      </span> 
    </div>
  </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>

<script src="https://js.pusher.com/3.1/pusher.min.js"></script>

<script>
    Pusher.logToConsole = true;
    var pusher = new Pusher('db5516d4f7a81e681d0f', {
        encrypted: true
    });

    var chat_channel = pusher.subscribe('chat');
    var game_channel = pusher.subscribe('<%=@game.id%>');
    var initial_join_processed = false;
    chat_channel.bind('sendMessage', function(data) {
        $('#chat').append('<div class="chat-body"><div class="header"><strong class="primary-font">' + data.user_email + '</strong></div><p>' + data.message + '</p></div>');

        scrollToBottom();
    });

    game_channel.bind('newPlayerJoined', function(data){
        $('#chat').append('<div class="chat-body"><div class="header"><strong class="primary-font">' + data.user_email + '</strong></div><p>has joined the game.</p></div>');
    });

    game_channel.bind('promptForMoves', function(data){
        data=setCurrentPlayer(data);
        logGameStarted();
        data=getMoves(data);
        // console.log(data)
        sendMoves(getCurrentPlayer(data));
    });

    game_channel.bind('allMovesEntered', function(data){
        console.log('All Moves entered!');
        // console.log(data);
        data=setCurrentPlayer(data);
        results=animateGame(data);
        current_player = getCurrentPlayer(data);
        if(current_player.is_attacker){
            sendResults(results);
        }
    });

    game_channel.bind('gameComplete', function(data){
        // window.location.replace('/game/game_results/<%=@game.id%>');
        console.log("The game is complete!");
        console.log(data);
        data=setCurrentPlayer(data);
        logResults(data);
    });

    game_channel.bind('pusher:subscription_succeeded', function() {
        if(!initial_join_processed){
            initialJoin();
            initial_join_processed = true;
        }
    });


    function getMoves(game_package){
        for(var i = 0; i<4; i++){
            if(game_package[i].is_current_player){
                game_package[i].action_1_x=getRandomInt(0, 500);
                game_package[i].action_1_y=getRandomInt(0, 500);
                game_package[i].action_2_x=getRandomInt(0, 500);
                game_package[i].action_2_y=getRandomInt(0, 500);
                game_package[i].action_3_x=getRandomInt(0, 500);
                game_package[i].action_3_y=getRandomInt(0, 500);
                game_package[i].position_x=getRandomInt(0, 500);
                game_package[i].position_y=getRandomInt(0, 500);
            }
        }
        return game_package
    }

    function sendMoves(game_package){
        $.ajax({
        type: "POST",
        url: "<%= pusher_submit_moves_path%>",
        data: game_package,
        success: logWaitingForMoves
        });
    }

    function animateGame(game_package){
        for(var i =0; i<4; i++ ){
            if(!game_package[i].is_attacker){
                game_package[i].is_alive=(getRandomInt(0,2)==1);
            }
        }
        return game_package;
    }

    function sendResults(results){
        $.ajax({
        type: "POST",
        url: "<%= pusher_submit_results_path%>",
        data: { game_data: JSON.stringify(results) }
        });

    }

    function getCurrentPlayer(game_package){
        for (var i = 0; i < game_package.length; i++) {
            if (game_package[i].is_current_player){
                return game_package[i];
            }
        }
    }

    function setCurrentPlayer(game_package){
        for (var i = 0; i < game_package.length; i++) {
            if (game_package[i].user_id == <%=current_user.id%>){
                game_package[i].is_current_player=true;
            }
            else{
                game_package[i].is_current_player=false;
            }
        }
        return game_package;
    }

    function initialJoin(){
        $.ajax({
        type: "POST",
        data: { id: <%=@game.id%>},
        url: "<%= pusher_player_joined_path%>"
        });
    }

    function logWaitingForMoves(){
        $('#chat').append('<div class="chat-body"><div class="header"><strong class="primary-font"><p>Your moves were submitted. Waiting for other players to select their moves...</p></strong></div></div>');
        scrollToBottom();
    }

    function logGameStarted(){
        $('#chat').append('<div class="chat-body"><div class="header"><strong class="primary-font"><p>The game has started. Please select your moves!</p></strong></div></div>');
        scrollToBottom();
    }

    function logResults(game_data){
        player_results = new Array(4);
        for(var i =0; i<4; i++){
            player_results[i]='<p><strong class="primary-font">'+game_data[i]['username']+"</strong> Deaths: "+game_data[i].deaths;
        }
        $('#chat').append('<div class="chat-body"><div class="header"><strong class="primary-font"><p>The game has ended. Here are the results:</p></strong></div></div>');
        for (var i =0; i<4; i++){
            $('#chat').append('<div class="chat-body">'+player_results[i]+'</div>');
        }
        scrollToBottom();
    }

    function sendMessage() {
        var message = document.getElementById("message_box").value;

        var payload = {
            user_email: "<%= current_user.email %>",
            message: message
        }

        $.ajax({
            type: "POST",
            url: "<%= pusher_chat_path %>",
            data: payload,
            success: clearMessageBox()
        });
    }
    function getRandomInt(min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }

    // remove old text in message box
    function clearMessageBox() {
        document.getElementById("message_box").value = "";
    }

    // scroll to last message when received new message 
    function scrollToBottom() {
        var chat = document.getElementById("chat");
        chat.scrollTop = chat.scrollHeight;
    }
    $( document ).ready(function() {
        // trigger button click when user hits Enter key
        $("#message_box").keyup(function(event){
            if (event.keyCode == 13){
                $("#send_button").click();
            }
        });
    });
</script>
